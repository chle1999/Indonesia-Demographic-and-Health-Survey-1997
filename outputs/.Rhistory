separate(col = all,
into = c("temp1", "temp2", "Region/Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "merge"
) %>%
mutate(`Region/Residence`=ifelse(!is.na(temp2), paste(`temp1`,`temp2`, `Region/Residence`, sep = " "), `Region/Residence`)) %>%
mutate(`Region/Residence`=str_replace(`Region/Residence`, "Java-Bali", "Java Bali")) %>%
subset(select =-c(temp1, temp2))
education_data <- tibble(all = page_71[40:43])
education_data <- education_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp", "Education", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Education`=ifelse(!is.na(temp), paste(`temp`, `Education`, sep = " "), `Education`)) %>%
subset(select =-temp)
work_status_data <- tibble(all = page_71[45:46])
work_status_data <- work_status_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "temp3", "Work Status", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laidå out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Work Status`=ifelse(!is.na(temp1), paste(`temp1`,`temp2`,`temp3`, `Work Status`, sep = " "), paste(`temp2`,`temp3`, `Work Status`, sep = " "))) %>%
subset(select =-c(temp1, temp2, temp3))
# First find the characters that should not be in there by for loop
data_names <- c("mother_age_data", "birth_order_data", "sex_of_prior_birth_data", "prior_birth_survive_data", "residence_data", "region_data", "education_data", "work_status_data")
for (i in 1:length(data_names)) {
print(eval(as.symbol(data_names[i])) %>%
select(column_name[2:length(column_name)]) %>%
mutate_all(~str_remove_all(., "[:digit:]")) %>%
mutate_all(~str_remove_all(., ",")) %>%
mutate_all(~str_remove_all(., "_")) %>%
mutate_all(~str_remove_all(., "-")) %>%
distinct())
}
# as all table is clean, now convert our character column of numbers to integers
for (i in 1:length(data_names)) {
assign(data_names[i], eval(as.symbol(data_names[i])) %>%
mutate_at(vars(column_name[9]), ~str_remove_all(., ",")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "_", "0")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "-", "0")) %>%
mutate_at(vars(column_name[9]), ~as.integer(.)) %>%
mutate_at(vars(column_name[2:8]), ~as.double(.)))
}
# save the df to csv files
for (i in 1:length(data_names)) {
write.csv(eval(as.symbol(data_names[i])), paste(here(), "/outputs/data/", data_names[i], ".csv", sep = ""), row.names = FALSE)}
# extract page 42 content of the report by OCR
all_content <- pdf_text(paste(here(), "inputs/FR95.pdf", sep = ""))
page_71 <- stri_split_lines(all_content[[71]])[[1]]
# Grab the name of the table
table_name <- page_71[1] %>% str_squish() %>% str_to_title() %>% strsplit(" +")
table_name <- paste(table_name[[1]][3], table_name[[1]][4], table_name[[1]][5], table_name[[1]][5], sep=" ")
# Grab the description of the table
table_description <- page_71[2] %>% str_squish()  %>% paste(str_squish(page_71[3]), sep=" ") %>% str_to_title()
# Grab the name of table columns
column_name <- page_71[4] %>% str_squish()  %>% paste(str_squish(page_71[5]), str_squish(page_71[6]), str_squish(page_71[7]), sep=" ") %>% str_to_title()
column_name <- c("Characteristic", "07-17", "18-23", "24-35", "36-47", "48+", "Total", "Median number of months since previous birth", "Number of births")
# Convert into eight tibble
mother_age_data <- tibble(all = page_71[9:15])
mother_age_data <- mother_age_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
mutate(all = str_replace(all, "45-19", "45-49")) %>%
separate(col = all,
into = c("Mother Age", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
birth_order_data <- tibble(all = page_71[17:19])
birth_order_data <- birth_order_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Birth Order", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
sex_of_prior_birth_data <- tibble(all = page_71[21:22])
sex_of_prior_birth_data <- sex_of_prior_birth_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Sex of Prior Birth", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
prior_birth_survive_data <- tibble(all = page_71[24:25])
prior_birth_survive_data <- prior_birth_survive_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Survival of Prior Birth", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
residence_data <- tibble(all = page_71[27:28])
residence_data <- residence_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
region_data <- tibble(all = page_71[30:38])
region_data <- region_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
mutate(all = str_replace(all, "I1.0", "11.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "Region/Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "merge"
) %>%
mutate(`Region/Residence`=ifelse(!is.na(temp2), paste(`temp1`,`temp2`, `Region/Residence`, sep = " "), `Region/Residence`)) %>%
mutate(`Region/Residence`=str_replace(`Region/Residence`, "Java-Bali", "Java Bali")) %>%
subset(select =-c(temp1, temp2))
education_data <- tibble(all = page_71[40:43])
education_data <- education_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp", "Education", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Education`=ifelse(!is.na(temp), paste(`temp`, `Education`, sep = " "), `Education`)) %>%
subset(select =-temp)
work_status_data <- tibble(all = page_71[45:46])
work_status_data <- work_status_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "temp3", "Work Status", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laidå out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Work Status`=ifelse(!is.na(temp1), paste(`temp1`,`temp2`,`temp3`, `Work Status`, sep = " "), paste(`temp2`,`temp3`, `Work Status`, sep = " "))) %>%
subset(select =-c(temp1, temp2, temp3))
# First find the characters that should not be in there by for loop
data_names <- c("mother_age_data", "birth_order_data", "sex_of_prior_birth_data", "prior_birth_survive_data", "residence_data", "region_data", "education_data", "work_status_data")
for (i in 1:length(data_names)) {
print(eval(as.symbol(data_names[i])) %>%
select(column_name[2:length(column_name)]) %>%
mutate_all(~str_remove_all(., "[:digit:]")) %>%
mutate_all(~str_remove_all(., ",")) %>%
mutate_all(~str_remove_all(., "_")) %>%
mutate_all(~str_remove_all(., "-")) %>%
distinct())
}
# as all table is clean, now convert our character column of numbers to integers
for (i in 1:length(data_names)) {
assign(data_names[i], eval(as.symbol(data_names[i])) %>%
mutate_at(vars(column_name[9]), ~str_remove_all(., ",")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "_", "0")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "-", "0")) %>%
mutate_at(vars(column_name[9]), ~as.integer(.)) %>%
mutate_at(vars(column_name[2:8]), ~as.double(.)))
}
# save the df to csv files
for (i in 1:length(data_names)) {
write.csv(eval(as.symbol(data_names[i])), paste(here(), "/outputs/data/", data_names[i], ".csv", sep = ""), row.names = FALSE)}
# extract page 42 content of the report by OCR
all_content <- pdf_text(paste(here(), "/inputs/FR95.pdf", sep = ""))
page_71 <- stri_split_lines(all_content[[71]])[[1]]
# Grab the name of the table
table_name <- page_71[1] %>% str_squish() %>% str_to_title() %>% strsplit(" +")
table_name <- paste(table_name[[1]][3], table_name[[1]][4], table_name[[1]][5], table_name[[1]][5], sep=" ")
# Grab the description of the table
table_description <- page_71[2] %>% str_squish()  %>% paste(str_squish(page_71[3]), sep=" ") %>% str_to_title()
# Grab the name of table columns
column_name <- page_71[4] %>% str_squish()  %>% paste(str_squish(page_71[5]), str_squish(page_71[6]), str_squish(page_71[7]), sep=" ") %>% str_to_title()
column_name <- c("Characteristic", "07-17", "18-23", "24-35", "36-47", "48+", "Total", "Median number of months since previous birth", "Number of births")
# Convert into eight tibble
mother_age_data <- tibble(all = page_71[9:15])
mother_age_data <- mother_age_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
mutate(all = str_replace(all, "45-19", "45-49")) %>%
separate(col = all,
into = c("Mother Age", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
birth_order_data <- tibble(all = page_71[17:19])
birth_order_data <- birth_order_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Birth Order", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
sex_of_prior_birth_data <- tibble(all = page_71[21:22])
sex_of_prior_birth_data <- sex_of_prior_birth_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Sex of Prior Birth", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
prior_birth_survive_data <- tibble(all = page_71[24:25])
prior_birth_survive_data <- prior_birth_survive_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Survival of Prior Birth", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
residence_data <- tibble(all = page_71[27:28])
residence_data <- residence_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
region_data <- tibble(all = page_71[30:38])
region_data <- region_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
mutate(all = str_replace(all, "I1.0", "11.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "Region/Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "merge"
) %>%
mutate(`Region/Residence`=ifelse(!is.na(temp2), paste(`temp1`,`temp2`, `Region/Residence`, sep = " "), `Region/Residence`)) %>%
mutate(`Region/Residence`=str_replace(`Region/Residence`, "Java-Bali", "Java Bali")) %>%
subset(select =-c(temp1, temp2))
education_data <- tibble(all = page_71[40:43])
education_data <- education_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp", "Education", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Education`=ifelse(!is.na(temp), paste(`temp`, `Education`, sep = " "), `Education`)) %>%
subset(select =-temp)
work_status_data <- tibble(all = page_71[45:46])
work_status_data <- work_status_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "temp3", "Work Status", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laidå out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Work Status`=ifelse(!is.na(temp1), paste(`temp1`,`temp2`,`temp3`, `Work Status`, sep = " "), paste(`temp2`,`temp3`, `Work Status`, sep = " "))) %>%
subset(select =-c(temp1, temp2, temp3))
# First find the characters that should not be in there by for loop
data_names <- c("mother_age_data", "birth_order_data", "sex_of_prior_birth_data", "prior_birth_survive_data", "residence_data", "region_data", "education_data", "work_status_data")
for (i in 1:length(data_names)) {
print(eval(as.symbol(data_names[i])) %>%
select(column_name[2:length(column_name)]) %>%
mutate_all(~str_remove_all(., "[:digit:]")) %>%
mutate_all(~str_remove_all(., ",")) %>%
mutate_all(~str_remove_all(., "_")) %>%
mutate_all(~str_remove_all(., "-")) %>%
distinct())
}
# as all table is clean, now convert our character column of numbers to integers
for (i in 1:length(data_names)) {
assign(data_names[i], eval(as.symbol(data_names[i])) %>%
mutate_at(vars(column_name[9]), ~str_remove_all(., ",")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "_", "0")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "-", "0")) %>%
mutate_at(vars(column_name[9]), ~as.integer(.)) %>%
mutate_at(vars(column_name[2:8]), ~as.double(.)))
}
# save the df to csv files
for (i in 1:length(data_names)) {
write.csv(eval(as.symbol(data_names[i])), paste(here(), "/outputs/data/", data_names[i], ".csv", sep = ""), row.names = FALSE)}
View(mother_age_data)
page_71
work_status_data <- tibble(all = page_71[56:59])
work_status_data <- rbind(slice(work_status_data, 1:2), slice(work_status_data, 4)) %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "temp3", "Work Status", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laidå out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Work Status`=ifelse(!is.na(temp1), paste(`temp1`,`temp2`,`temp3`, `Work Status`, sep = " "), paste(`temp2`,`temp3`, `Work Status`, sep = " "))) %>%
subset(select =-c(temp1, temp2, temp3))
work_status_data <- tibble(all = page_71[56:59])
work_status_data <- rbind(slice(work_status_data, 1:2), slice(work_status_data, 4)) %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "temp3", "Work Status", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laidå out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Work Status`=ifelse(!is.na(temp1), paste(`temp1`,`temp2`,`temp3`, `Work Status`, sep = " "), paste(`temp2`,`temp3`, `Work Status`, sep = " "))) %>%
subset(select =-c(temp1, temp2, temp3))
View(work_status_data)
# extract page 42 content of the report by OCR
all_content <- pdf_text(paste(here(), "/inputs/FR95.pdf", sep = ""))
page_71 <- stri_split_lines(all_content[[71]])[[1]]
page_71
# Grab the name of the table
table_name <- page_71[1] %>% str_squish() %>% str_to_title() %>% strsplit(" +")
table_name <- paste(table_name[[1]][3], table_name[[1]][4], table_name[[1]][5], table_name[[1]][5], sep=" ")
# Grab the description of the table
table_description <- page_71[2] %>% str_squish()  %>% paste(str_squish(page_71[3]), str_squish(page_71[4]), sep=" ") %>% str_to_title()
# Grab the name of table columns
column_name <- page_71[6] %>% str_squish()  %>% paste(str_squish(page_71[7]), str_squish(page_71[8]), str_squish(page_71[9]), sep=" ") %>% str_to_title()
column_name <- c("Characteristic", "07-17", "18-23", "24-35", "36-47", "48+", "Total", "Median number of months since previous birth", "Number of births")
# Convert into eight tibble
mother_age_data <- tibble(all = page_71[13:19])
mother_age_data <- mother_age_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
mutate(all = str_replace(all, "45-19", "45-49")) %>%
separate(col = all,
into = c("Mother Age", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
birth_order_data <- tibble(all = page_71[22:24])
birth_order_data <- birth_order_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Birth Order", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
sex_of_prior_birth_data <- tibble(all = page_71[27:28])
sex_of_prior_birth_data <- sex_of_prior_birth_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Sex of Prior Birth", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
prior_birth_survive_data <- tibble(all = page_71[31:32])
prior_birth_survive_data <- prior_birth_survive_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Survival of Prior Birth", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
residence_data <- tibble(all = page_71[35:36])
residence_data <- residence_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "right",
extra = "drop"
)
region_data <- tibble(all = page_71[39:47])
region_data <- region_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
mutate(all = str_replace(all, "I1.0", "11.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "Region/Residence", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "merge"
) %>%
mutate(`Region/Residence`=ifelse(!is.na(temp2), paste(`temp1`,`temp2`, `Region/Residence`, sep = " "), `Region/Residence`)) %>%
mutate(`Region/Residence`=str_replace(`Region/Residence`, "Java-Bali", "Java Bali")) %>%
subset(select =-c(temp1, temp2))
education_data <- tibble(all = page_71[50:53])
education_data <- education_data %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp", "Education", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laid out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Education`=ifelse(!is.na(temp), paste(`temp`, `Education`, sep = " "), `Education`)) %>%
subset(select =-temp)
work_status_data <- tibble(all = page_71[56:59])
work_status_data <- rbind(slice(work_status_data, 1:2), slice(work_status_data, 4)) %>%
mutate(all = str_squish(all)) %>% # Any space more than two spaces is reduced
mutate(all = str_replace(all, "I00.0", "100.0")) %>%
separate(col = all,
into = c("temp1", "temp2", "temp3", "Work Status", column_name[2:length(column_name)]),
sep = " ", # Works fine because the tables are nicely laidå out
remove = TRUE,
fill = "left",
extra = "drop"
) %>%
mutate(`Work Status`=ifelse(!is.na(temp1), paste(`temp1`,`temp2`,`temp3`, `Work Status`, sep = " "), paste(`temp2`,`temp3`, `Work Status`, sep = " "))) %>%
subset(select =-c(temp1, temp2, temp3))
# First find the characters that should not be in there by for loop
data_names <- c("mother_age_data", "birth_order_data", "sex_of_prior_birth_data", "prior_birth_survive_data", "residence_data", "region_data", "education_data", "work_status_data")
for (i in 1:length(data_names)) {
print(eval(as.symbol(data_names[i])) %>%
select(column_name[2:length(column_name)]) %>%
mutate_all(~str_remove_all(., "[:digit:]")) %>%
mutate_all(~str_remove_all(., ",")) %>%
mutate_all(~str_remove_all(., "_")) %>%
mutate_all(~str_remove_all(., "-")) %>%
distinct())
}
# as all table is clean, now convert our character column of numbers to integers
for (i in 1:length(data_names)) {
assign(data_names[i], eval(as.symbol(data_names[i])) %>%
mutate_at(vars(column_name[9]), ~str_remove_all(., ",")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "_", "0")) %>%
mutate_at(vars(column_name[9]), ~str_replace(., "-", "0")) %>%
mutate_at(vars(column_name[9]), ~as.integer(.)) %>%
mutate_at(vars(column_name[2:8]), ~as.double(.)))
}
# save the df to csv files
for (i in 1:length(data_names)) {
write.csv(eval(as.symbol(data_names[i])), paste(here(), "/outputs/data/", data_names[i], ".csv", sep = ""), row.names = FALSE)}
View(birth_order_data)
# Education Separated By Number Of Months Since Previous Birth
fig5 <- education_data %>% select(c("Education", column_name[2:6])) %>% pivot_longer(-`Education`) %>% rename(`Months`=name)
ggplot(fig5, aes(x=Education, y=as.numeric(`value`), fill=`Months`)) +
geom_col(position = "stack") +
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x="Education Level", y="Percentage") +
ggtitle("Education Separated By Number Of Months Since Previous Birth") +
geom_text(aes(label = round(as.numeric(`value`),1)), size = 3, hjust = 0.5, vjust = 0, position = "stack") +
theme(plot.title = element_text(size=8, hjust=0.5)) +
theme_minimal() +
coord_flip() +
theme(legend.position="bottom") +
labs(caption = "Figure5 created by Group 16 in STA304, Winter 2022")
# Median Number Of Months Since Previous Birth Separated by Region
fig4 <- region_data %>% select(c("Region/Residence", "Median number of months since previous birth")) %>% mutate(Region=rep(c("Java Bali", "Outer Java Bali I", "Outer Java Bali II"), each=3), .before=`Region/Residence`) %>% rename(Residence=`Region/Residence`) %>% mutate(Residence=rep(c("Overall", "Urban", "Rural"), 3))
ggplot(fig4, aes(x=Residence, y=as.numeric(`Median number of months since previous birth`), fill=Residence)) +
geom_col(position = "stack") +
facet_wrap(~`Region`, nrow = 1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x="Region", y="Median Number Of Months Since Previous Birth") +
ggtitle("Median Number Of Months Since Previous Birth Separated by Region") +
geom_text(aes(label = round(as.numeric(`Median number of months since previous birth`),1)), size = 3, hjust = 0.5, vjust = 0, position = "stack") +
theme(plot.title = element_text(size=8, hjust=0.5)) +
theme_minimal() +
theme(legend.position="bottom") +
labs(caption = "Figure4 created by Group 16 in STA304, Winter 2022")
